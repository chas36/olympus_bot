"""
–•—ç–Ω–¥–ª–µ—Ä—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞
"""
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from sqlalchemy.ext.asyncio import AsyncSession
from database.database import AsyncSessionLocal
from database import crud
from bot.keyboards import get_admin_main_menu
import os
from loguru import logger

router = Router()

# –°–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (–º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ .env)
ADMIN_IDS = list(map(int, os.getenv("ADMIN_IDS", "").split(","))) if os.getenv("ADMIN_IDS") else []


def is_admin(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
    return user_id in ADMIN_IDS


@router.message(Command("admin"))
async def admin_panel(message: Message):
    """–û—Ç–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"""
    if not is_admin(message.from_user.id):
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏")
        return

    await message.answer(
        "üë§ –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_admin_main_menu()
    )


@router.callback_query(F.data == "admin_menu")
async def show_admin_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    if not is_admin(callback.from_user.id):
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏", show_alert=True)
        return

    await callback.message.edit_text(
        "üë§ –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_admin_main_menu()
    )


@router.callback_query(F.data == "admin_stats")
async def show_statistics(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    if not is_admin(callback.from_user.id):
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞", show_alert=True)
        return

    async with AsyncSessionLocal() as session:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º –≤–º–µ—Å—Ç–æ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
        student_stats = await crud.get_students_count_stats(session)
        all_sessions = await crud.get_all_sessions(session)
        active_session = await crud.get_active_session(session)

        stats_text = (
            "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã\n\n"
            f"üë• –í—Å–µ–≥–æ —É—á–µ–Ω–∏–∫–æ–≤: {student_stats['total']}\n"
            f"‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {student_stats['registered']}\n"
            f"‚ùå –ù–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {student_stats['unregistered']}\n\n"
            f"üèÜ –í—Å–µ–≥–æ –æ–ª–∏–º–ø–∏–∞–¥: {len(all_sessions)}\n"
            f"üü¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –æ–ª–∏–º–ø–∏–∞–¥: {1 if active_session else 0}\n"
        )

        if active_session:
            stats_text += f"\nüìö –ê–∫—Ç–∏–≤–Ω–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞: {active_session.subject}"

    await callback.message.edit_text(
        stats_text,
        reply_markup=get_admin_main_menu()
    )


@router.callback_query(F.data == "admin_students")
async def show_students(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤"""
    if not is_admin(callback.from_user.id):
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞", show_alert=True)
        return

    async with AsyncSessionLocal() as session:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º –≤–º–µ—Å—Ç–æ N+1
        stats = await crud.get_classes_statistics(session)

        if not stats:
            await callback.message.edit_text(
                "üìù –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–∫–∞ –Ω–µ—Ç —É—á–µ–Ω–∏–∫–æ–≤",
                reply_markup=get_admin_main_menu()
            )
            return

        text = "üë• –°–ø–∏—Å–æ–∫ –∫–ª–∞—Å—Å–æ–≤:\n\n"
        for class_num, data in stats.items():
            text += f"{class_num} –∫–ª–∞—Å—Å: {data['total']} —É—á–µ–Ω–∏–∫–æ–≤ ({data['registered']} –∑–∞—Ä–µ–≥.)\n"

    await callback.message.edit_text(
        text + "\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—á–µ–Ω–∏–∫–∞–º–∏",
        reply_markup=get_admin_main_menu()
    )


@router.callback_query(F.data == "admin_upload")
async def show_upload_info(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–æ–≤"""
    if not is_admin(callback.from_user.id):
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞", show_alert=True)
        return

    await callback.message.edit_text(
        "üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏:\n"
        "- POST /api/upload/csv - –∑–∞–≥—Ä—É–∑–∫–∞ CSV\n"
        "- POST /api/upload/excel - –∑–∞–≥—Ä—É–∑–∫–∞ Excel\n\n"
        "üí° –î–ª—è —Ä–∞–±–æ—Ç—ã —Å API –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –Ω–∞ /docs",
        reply_markup=get_admin_main_menu()
    )


@router.callback_query(F.data == "admin_generate_codes")
async def show_codes_info(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–æ–≤"""
    if not is_admin(callback.from_user.id):
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞", show_alert=True)
        return

    await callback.message.edit_text(
        "üîë –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–æ–≤\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ API —ç–Ω–¥–ø–æ–∏–Ω—Ç:\n"
        "POST /api/admin/generate-codes?count=N\n\n"
        "–ì–¥–µ N - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–¥–æ–≤ (–æ—Ç 1 –¥–æ 100)\n\n"
        "üí° –î–ª—è —Ä–∞–±–æ—Ç—ã —Å API –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –Ω–∞ /docs",
        reply_markup=get_admin_main_menu()
    )


@router.message(Command("clear_students"))
async def clear_students_command(message: Message):
    """–û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —É—á–µ–Ω–∏–∫–æ–≤ (—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º)"""
    if not is_admin(message.from_user.id):
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
        return

    await message.answer(
        "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï!\n\n"
        "–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —É–¥–∞–ª–∏—Ç—å –í–°–ï–• —É—á–µ–Ω–∏–∫–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.\n"
        "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –ù–ï–û–ë–†–ê–¢–ò–ú–û!\n\n"
        "–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
        "DELETE /api/admin/students?confirm=DELETE_ALL\n\n"
        "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ API –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —É—á–µ–Ω–∏–∫–æ–≤ –∏–ª–∏ –∫–ª–∞—Å—Å–æ–≤."
    )


@router.message(Command("delete_olympiad"))
async def delete_olympiad_command(message: Message):
    """–£–¥–∞–ª–∏—Ç—å –æ–ª–∏–º–ø–∏–∞–¥—É"""
    if not is_admin(message.from_user.id):
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
        return

    async with AsyncSessionLocal() as session:
        sessions = await crud.get_all_sessions(session)

        if not sessions:
            await message.answer("üìù –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –æ–ª–∏–º–ø–∏–∞–¥")
            return

        text = "üèÜ –°–ø–∏—Å–æ–∫ –æ–ª–∏–º–ø–∏–∞–¥:\n\n"
        for s in sessions:
            status = "üü¢ –ê–∫—Ç–∏–≤–Ω–∞" if s.is_active else "‚ö™ –ù–µ–∞–∫—Ç–∏–≤–Ω–∞"
            text += f"ID {s.id}: {s.subject} ({status})\n"
            text += f"  –î–∞—Ç–∞: {s.date.strftime('%d.%m.%Y')}\n"
            text += f"  –ö–ª–∞—Å—Å: {s.class_number or '–†–∞–∑–Ω—ã–µ'}\n\n"

        text += "üí° –î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
        text += "DELETE /api/admin/olympiads/{session_id}"

    await message.answer(text)


@router.message(Command("delete_class"))
async def delete_class_command(message: Message):
    """–£–¥–∞–ª–∏—Ç—å –∫–ª–∞—Å—Å"""
    if not is_admin(message.from_user.id):
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
        return

    async with AsyncSessionLocal() as session:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º –≤–º–µ—Å—Ç–æ N+1
        stats = await crud.get_classes_statistics(session)

        if not stats:
            await message.answer("üìù –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∫–ª–∞—Å—Å–æ–≤")
            return

        text = "üë• –°–ø–∏—Å–æ–∫ –∫–ª–∞—Å—Å–æ–≤:\n\n"
        for class_num, data in stats.items():
            text += f"{class_num} –∫–ª–∞—Å—Å: {data['total']} —É—á–µ–Ω–∏–∫–æ–≤\n"

        text += "\nüí° –î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
        text += "DELETE /api/admin/classes/{class_number}"

    await message.answer(text)


@router.callback_query(F.data == "admin_olympiads")
async def show_olympiads(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –æ–ª–∏–º–ø–∏–∞–¥"""
    if not is_admin(callback.from_user.id):
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞", show_alert=True)
        return

    async with AsyncSessionLocal() as session:
        sessions = await crud.get_all_sessions(session)

        if not sessions:
            await callback.message.edit_text(
                "üìù –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –æ–ª–∏–º–ø–∏–∞–¥",
                reply_markup=get_admin_main_menu()
            )
            return

        text = "üèÜ –°–ø–∏—Å–æ–∫ –æ–ª–∏–º–ø–∏–∞–¥:\n\n"
        for s in sessions:
            status = "üü¢ –ê–∫—Ç–∏–≤–Ω–∞" if s.is_active else "‚ö™ –ù–µ–∞–∫—Ç–∏–≤–Ω–∞"
            text += f"ID {s.id}: {s.subject} ({status})\n"
            text += f"  –î–∞—Ç–∞: {s.date.strftime('%d.%m.%Y')}\n"
            text += f"  –ö–ª–∞—Å—Å: {s.class_number or '–†–∞–∑–Ω—ã–µ'}\n\n"

        text += "üí° –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ API"

    await callback.message.edit_text(
        text,
        reply_markup=get_admin_main_menu()
    )


@router.callback_query(F.data == "admin_api_help")
async def show_api_help(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ API"""
    if not is_admin(callback.from_user.id):
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞", show_alert=True)
        return

    help_text = """
üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ API –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

üîπ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–µ–Ω–∏–∫–∞–º–∏:
‚Ä¢ GET /api/admin/students
‚Ä¢ DELETE /api/admin/students/{id}?force=true
‚Ä¢ DELETE /api/admin/students?confirm=DELETE_ALL

üîπ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞–º–∏:
‚Ä¢ GET /api/admin/classes
‚Ä¢ GET /api/admin/classes/{class_number}/students
‚Ä¢ DELETE /api/admin/classes/{class_number}

üîπ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–ª–∏–º–ø–∏–∞–¥–∞–º–∏:
‚Ä¢ GET /api/admin/olympiads
‚Ä¢ DELETE /api/admin/olympiads/{id}
‚Ä¢ POST /api/admin/olympiads/{id}/activate

üîπ –î—Ä—É–≥–æ–µ:
‚Ä¢ POST /api/admin/generate-codes?count=N
‚Ä¢ GET /api/admin/export/students

üí° –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: /docs
"""
    await callback.message.edit_text(
        help_text,
        reply_markup=get_admin_main_menu()
    )


@router.message(Command("api_help"))
async def api_help_command(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ API"""
    if not is_admin(message.from_user.id):
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
        return

    help_text = """
üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ API –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

üîπ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–µ–Ω–∏–∫–∞–º–∏:
‚Ä¢ GET /api/admin/students - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—á–µ–Ω–∏–∫–æ–≤
‚Ä¢ DELETE /api/admin/students/{id}?force=true - —É–¥–∞–ª–∏—Ç—å —É—á–µ–Ω–∏–∫–∞
‚Ä¢ DELETE /api/admin/students?confirm=DELETE_ALL - —É–¥–∞–ª–∏—Ç—å –≤—Å–µ—Ö

üîπ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞–º–∏:
‚Ä¢ GET /api/admin/classes - —Å–ø–∏—Å–æ–∫ –∫–ª–∞—Å—Å–æ–≤
‚Ä¢ GET /api/admin/classes/{class_number}/students - —É—á–µ–Ω–∏–∫–∏ –∫–ª–∞—Å—Å–∞
‚Ä¢ DELETE /api/admin/classes/{class_number} - —É–¥–∞–ª–∏—Ç—å –∫–ª–∞—Å—Å

üîπ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–ª–∏–º–ø–∏–∞–¥–∞–º–∏:
‚Ä¢ GET /api/admin/olympiads - —Å–ø–∏—Å–æ–∫ –æ–ª–∏–º–ø–∏–∞–¥
‚Ä¢ DELETE /api/admin/olympiads/{id} - —É–¥–∞–ª–∏—Ç—å –æ–ª–∏–º–ø–∏–∞–¥—É
‚Ä¢ POST /api/admin/olympiads/{id}/activate - –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å

üîπ –î—Ä—É–≥–æ–µ:
‚Ä¢ POST /api/admin/generate-codes?count=N - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–æ–≤
‚Ä¢ GET /api/admin/export/students - —ç–∫—Å–ø–æ—Ä—Ç –≤ CSV

üí° –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: /docs
"""
    await message.answer(help_text)
