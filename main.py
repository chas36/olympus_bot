"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ Olympus Bot
"""
import asyncio
import os
import sys
from dotenv import load_dotenv

load_dotenv()


async def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    from database.database import init_db
    await init_db()
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")


async def run_migrations():
    """–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π Alembic"""
    print("üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...")
    import subprocess
    result = subprocess.run(["alembic", "upgrade", "head"], capture_output=True, text=True)
    if result.returncode == 0:
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π: {result.stderr}")


async def start_bot():
    """–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞"""
    print("ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    from bot.main import main
    await main()


async def start_api():
    """–ó–∞–ø—É—Å–∫ FastAPI —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üåê –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞...")
    import uvicorn
    from api.main import app
    
    config = uvicorn.Config(
        app,
        host=os.getenv("API_HOST", "0.0.0.0"),
        port=int(os.getenv("API_PORT", 8000)),
        log_level="info"
    )
    server = uvicorn.Server(config)
    await server.serve()


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 50)
    print("üèÜ Olympus Bot - –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–ª–∏–º–ø–∏–∞–¥–∞–º–∏")
    print("=" * 50)
    
    if len(sys.argv) < 2:
        print("\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python main.py init     - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ë–î")
        print("  python main.py migrate  - –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏")
        print("  python main.py bot      - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
        print("  python main.py api      - –ó–∞–ø—É—Å—Ç–∏—Ç—å API")
        print("  python main.py all      - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ API –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ")
        return
    
    command = sys.argv[1].lower()
    
    if command == "init":
        await init_database()
    
    elif command == "migrate":
        await run_migrations()
    
    elif command == "bot":
        await init_database()
        await start_bot()
    
    elif command == "api":
        await init_database()
        await start_api()
    
    elif command == "all":
        await init_database()
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –∏ API –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
        await asyncio.gather(
            start_bot(),
            start_api()
        )
    
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n\nüëã –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
