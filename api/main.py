from fastapi import FastAPI, Request, Depends
from fastapi.staticfiles import StaticFiles
from fastapi.templating import Jinja2Templates
from fastapi.responses import HTMLResponse, RedirectResponse
from fastapi.middleware.cors import CORSMiddleware
from sqlalchemy.orm import Session
import os

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ —Ä–æ—É—Ç–µ—Ä—ã
from api.routers import students, codes, monitoring, admin, dashboard, notifications, screenshots, auth
from api.routers.auth import get_current_user, get_db
from database.models import User
from api.middleware import AuthMiddleware

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = FastAPI(
    title="Olympus Bot API v2",
    description="–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–ª–∏–º–ø–∏–∞–¥–∞–º–∏ —Å –≤–µ–±-–¥–∞—à–±–æ—Ä–¥–æ–º",
    version="2.0.0"
)

# –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –∑–∞—â–∏—Ç—ã API (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å)
ENABLE_API_AUTH = os.getenv("ENABLE_API_AUTH", "false").lower() == "true"

# CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Auth middleware (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π, —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è)
if ENABLE_API_AUTH:
    app.add_middleware(AuthMiddleware)
    print("üîí API –∑–∞—â–∏—â–µ–Ω: AuthMiddleware –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
else:
    print("‚ö†Ô∏è  API –ù–ï –∑–∞—â–∏—â–µ–Ω: AuthMiddleware –æ—Ç–∫–ª—é—á–µ–Ω (–¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ENABLE_API_AUTH=true)")

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
app.include_router(auth.router)  # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–µ—Ä–≤–æ–π –¥–ª—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
app.include_router(students.router)
app.include_router(codes.router)
app.include_router(monitoring.router)
app.include_router(admin.router)
app.include_router(notifications.router)
app.include_router(screenshots.router)

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
os.makedirs("admin_panel/static", exist_ok=True)
os.makedirs("admin_panel/templates", exist_ok=True)

# –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –∏ —à–∞–±–ª–æ–Ω—ã
app.mount("/static", StaticFiles(directory="admin_panel/static"), name="static")
templates = Jinja2Templates(directory="admin_panel/templates")


@app.get("/login", response_class=HTMLResponse)
async def login_page(request: Request):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    return templates.TemplateResponse(
        "login.html",
        {"request": request}
    )


@app.get("/")
async def root(request: Request, db: Session = Depends(get_db)):
    """
    –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å v2
    –í–†–ï–ú–ï–ù–ù–û –ë–ï–ó –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò
    """
    # –í–†–ï–ú–ï–ù–ù–û: –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞
    # user = get_current_user(request, db)
    # if not user:
    #     return RedirectResponse(url="/login", status_code=302)

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    return templates.TemplateResponse(
        "dashboard_v2.html",
        {
            "request": request,
            "user": None  # –í—Ä–µ–º–µ–Ω–Ω–æ –±–µ–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        }
    )


@app.get("/health")
async def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"""
    return {
        "status": "ok",
        "version": "2.0.0",
        "message": "Olympus Bot API v2 is running"
    }


@app.get("/api/info")
async def api_info():
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± API"""
    return {
        "name": "Olympus Bot API",
        "version": "2.0.0",
        "features": [
            "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–µ–Ω–∏–∫–∞–º–∏",
            "–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑ Excel –∏ CSV",
            "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–æ–≤ 9‚Üí8",
            "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏",
            "–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö"
        ]
    }


if __name__ == "__main__":
    import uvicorn
    
    host = os.getenv("API_HOST", "0.0.0.0")
    port = int(os.getenv("API_PORT", "8000"))
    
    uvicorn.run(
        "api.main:app",
        host=host,
        port=port,
        reload=True
    )