"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã–¥–∞—á–∏ –∫–æ–¥–æ–≤ —É—á–µ–Ω–∏–∫–∞–º
"""
import asyncio
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent))

from database.database import AsyncSessionLocal
from database.models import Student, Grade8Code, OlympiadSession
from database import crud
from sqlalchemy import select


async def test_code_issue():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—ã–¥–∞—á—É –∫–æ–¥–æ–≤ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —É—á–µ–Ω–∏–∫–∞–º"""

    async with AsyncSessionLocal() as session:
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É—á–µ–Ω–∏–∫–æ–≤
        result = await session.execute(
            select(Student).where(Student.is_registered == True)
        )
        students = result.scalars().all()

        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É—á–µ–Ω–∏–∫–æ–≤: {len(students)}")

        for student in students:
            print(f"\nüë§ {student.full_name}")
            print(f"   –ö–ª–∞—Å—Å: {student.class_number}{student.parallel or ''}")
            print(f"   Telegram ID: {student.telegram_id}")

        # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ—Å—Å–∏—é
        active_session = await crud.get_active_session(session)

        if not active_session:
            print("\n‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏!")
            return

        print(f"\nüìö –ê–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è: {active_session.subject} (ID: {active_session.id})")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—á–µ–Ω–∏–∫–∞
        for student in students:
            print(f"\nüë§ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–æ–≤ –¥–ª—è: {student.full_name}")

            # –î–ª—è 8 –∫–ª–∞—Å—Å–∞
            if student.class_number == 8:
                print(f"   –ö–ª–∞—Å—Å 8 - –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ 8 –∫–ª–∞—Å—Å–∞
                grade8_code = await crud.get_grade8_code_for_student(
                    session, student.id, active_session.id
                )

                if grade8_code:
                    print(f"   ‚úÖ –ö–æ–¥ 8 –∫–ª–∞—Å—Å–∞ –Ω–∞–π–¥–µ–Ω: {grade8_code.code}")
                else:
                    print(f"   ‚ùå –ö–æ–¥ 8 –∫–ª–∞—Å—Å–∞ –ù–ï –Ω–∞–π–¥–µ–Ω!")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–æ–¥–æ–≤ 9 –∫–ª–∞—Å—Å–∞
                grade9_count = await crud.count_available_grade9_codes(
                    session, active_session.id
                )
                print(f"   –î–æ—Å—Ç—É–ø–Ω–æ –∫–æ–¥–æ–≤ 9 –∫–ª–∞—Å—Å–∞: {grade9_count}")

            else:
                # –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
                print(f"   –ö–ª–∞—Å—Å {student.class_number} - –∫–æ–¥ –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω —Å—Ä–∞–∑—É")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥
                grade8_code = await crud.get_grade8_code_for_student(
                    session, student.id, active_session.id
                )

                if grade8_code:
                    print(f"   ‚úÖ –ö–æ–¥ –Ω–∞–π–¥–µ–Ω: {grade8_code.code}")
                else:
                    print(f"   ‚ùå –ö–æ–¥ –ù–ï –Ω–∞–π–¥–µ–Ω!")


if __name__ == "__main__":
    asyncio.run(test_code_issue())
