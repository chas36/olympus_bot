#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–¥–æ–≤ –ë–ï–ó —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ —É—á–µ–Ω–∏–∫–∞–º
"""

import sys
import asyncio
from pathlib import Path
from datetime import datetime

sys.path.insert(0, str(Path(__file__).parent.parent))

from parser.csv_parser import parse_codes_csv
from database.database import AsyncSessionLocal
from database.models import OlympiadSession, Grade8Code, Grade9Code


async def load_codes(csv_file: str):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–¥—ã –∏–∑ CSV"""
    print(f"\nüîë –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–¥–æ–≤ –∏–∑ {csv_file}")
    print("=" * 60)
    
    results = parse_codes_csv(csv_file, encoding='windows-1251')
    
    if not results:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Ñ–∞–π–ª")
        return
    
    print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: {len(results)}")
    
    for subject_data in results:
        print(f"  üìö {subject_data['subject']}: {len(subject_data['codes'])} –∫–æ–¥–æ–≤")
    
    response = input(f"\n‚ùì –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–¥—ã –≤ –ë–î –ë–ï–ó —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è? (yes/no): ")
    if response.lower() not in ['yes', 'y', '–¥–∞', '–¥']:
        print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ")
        return
    
    async with AsyncSessionLocal() as session:
        for subject_data in results:
            print(f"\nüì• {subject_data['subject']}...", end=" ")
            
            # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –æ–ª–∏–º–ø–∏–∞–¥—ã
            olympiad = OlympiadSession(
                subject=subject_data['subject'],
                date=datetime.now(),
                is_active=False
            )
            session.add(olympiad)
            await session.flush()
            
            class_num = subject_data['class_number']
            codes = subject_data['codes']
            
            if class_num == 8:
                for code_str in codes:
                    code = Grade8Code(
                        student_id=None,  # –ë–µ–∑ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
                        session_id=olympiad.id,
                        code=code_str,
                        is_issued=False
                    )
                    session.add(code)
            elif class_num == 9:
                for code_str in codes:
                    code = Grade9Code(
                        session_id=olympiad.id,
                        code=code_str,
                        is_used=False
                    )
                    session.add(code)
            
            print(f"‚úÖ {len(codes)} –∫–æ–¥–æ–≤")
        
        await session.commit()
        print(f"\n{'='*60}")
        print(f"‚úÖ –ì–æ—Ç–æ–≤–æ! –ö–æ–¥—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ë–ï–ó —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è")
        print(f"üí° –†–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∫–æ–¥—ã —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∏–ª–∏ —Å–∫—Ä–∏–ø—Ç")


if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python load_codes_simple.py <—Ñ–∞–π–ª.csv>")
        sys.exit(1)
    
    asyncio.run(load_codes(sys.argv[1]))
