"""
–°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å—Ç–∞—Ä–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î –≤ –Ω–æ–≤—É—é

–°—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:
- Students (–±–µ–∑ class_number)
- Grade8Code, Grade9Code (—Ä–∞–∑–¥–µ–ª—å–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã)

–ù–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:
- Students (—Å class_number)
- OlympiadCode (—É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞)
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∞—Å—Å–æ–≤ 4-11

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python scripts/migrate_to_new_structure.py
"""

import asyncio
import sys
import os

sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from sqlalchemy import text
from database.database import AsyncSessionLocal, init_db
from database.models import Student, OlympiadSession, OlympiadCode, DistributionMode


async def migrate_students():
    """
    –ú–∏–≥—Ä–∞—Ü–∏—è —É—á–µ–Ω–∏–∫–æ–≤:
    - –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞—Å—Å –ø–æ –∫–æ–¥–∞–º Grade8/Grade9
    - –ï—Å–ª–∏ –∫–ª–∞—Å—Å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω, —Å—Ç–∞–≤–∏–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 8
    """
    print("\n" + "=" * 60)
    print("üìö –ú–ò–ì–†–ê–¶–ò–Ø –£–ß–ï–ù–ò–ö–û–í")
    print("=" * 60)
    
    async with AsyncSessionLocal() as session:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Ç–∞—Ä—ã—Ö —Ç–∞–±–ª–∏—Ü
        result = await session.execute(
            text("""
                SELECT EXISTS (
                    SELECT FROM information_schema.tables 
                    WHERE table_name = 'grade8_codes'
                )
            """)
        )
        has_old_structure = result.scalar()
        
        if not has_old_structure:
            print("‚ÑπÔ∏è  –°—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –º–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —É—á–µ–Ω–∏–∫–æ–≤
        result = await session.execute(text("SELECT * FROM students"))
        old_students = result.fetchall()
        
        print(f"\n–ù–∞–π–¥–µ–Ω–æ —É—á–µ–Ω–∏–∫–æ–≤: {len(old_students)}")
        
        migrated = 0
        
        for old_student in old_students:
            student_id = old_student[0]  # id
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É —É—á–µ–Ω–∏–∫–∞ –∫–æ–¥—ã 8 –∫–ª–∞—Å—Å–∞
            result = await session.execute(
                text("SELECT COUNT(*) FROM grade8_codes WHERE student_id = :sid"),
                {"sid": student_id}
            )
            has_grade8 = result.scalar() > 0
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞—Å—Å
            class_number = 8 if has_grade8 else 9
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —É—á–µ–Ω–∏–∫–∞
            await session.execute(
                text("""
                    UPDATE students 
                    SET class_number = :class_num,
                        updated_at = NOW()
                    WHERE id = :sid
                """),
                {"class_num": class_number, "sid": student_id}
            )
            
            migrated += 1
        
        await session.commit()
        print(f"‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ —É—á–µ–Ω–∏–∫–æ–≤: {migrated}")


async def migrate_codes():
    """
    –ú–∏–≥—Ä–∞—Ü–∏—è –∫–æ–¥–æ–≤:
    - –ü–µ—Ä–µ–Ω–æ—Å–∏–º Grade8Code –∏ Grade9Code –≤ OlympiadCode
    - –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏
    """
    print("\n" + "=" * 60)
    print("üîë –ú–ò–ì–†–ê–¶–ò–Ø –ö–û–î–û–í")
    print("=" * 60)
    
    async with AsyncSessionLocal() as session:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Ç–∞—Ä—ã—Ö —Ç–∞–±–ª–∏—Ü
        result = await session.execute(
            text("""
                SELECT EXISTS (
                    SELECT FROM information_schema.tables 
                    WHERE table_name = 'grade8_codes'
                )
            """)
        )
        has_old_structure = result.scalar()
        
        if not has_old_structure:
            print("‚ÑπÔ∏è  –°—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –º–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
            return
        
        # –ú–∏–≥—Ä–∞—Ü–∏—è Grade8Code
        print("\nüìñ –ú–∏–≥—Ä–∞—Ü–∏—è –∫–æ–¥–æ–≤ 8 –∫–ª–∞—Å—Å–∞...")
        result = await session.execute(text("SELECT * FROM grade8_codes"))
        grade8_codes = result.fetchall()
        
        migrated_g8 = 0
        for code_data in grade8_codes:
            await session.execute(
                text("""
                    INSERT INTO olympiad_codes 
                    (session_id, class_number, code, student_id, is_assigned, 
                     assigned_at, is_reserve, is_issued, issued_at)
                    VALUES 
                    (:session_id, 8, :code, :student_id, true,
                     :issued_at, false, :is_issued, :issued_at)
                """),
                {
                    "session_id": code_data[2],  # session_id
                    "code": code_data[3],         # code
                    "student_id": code_data[1],   # student_id
                    "is_issued": code_data[4],    # is_issued
                    "issued_at": code_data[5]     # issued_at
                }
            )
            migrated_g8 += 1
        
        print(f"  ‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ –∫–æ–¥–æ–≤ 8 –∫–ª–∞—Å—Å–∞: {migrated_g8}")
        
        # –ú–∏–≥—Ä–∞—Ü–∏—è Grade9Code
        print("\nüìñ –ú–∏–≥—Ä–∞—Ü–∏—è –∫–æ–¥–æ–≤ 9 –∫–ª–∞—Å—Å–∞...")
        result = await session.execute(text("SELECT * FROM grade9_codes"))
        grade9_codes = result.fetchall()
        
        migrated_g9 = 0
        for code_data in grade9_codes:
            await session.execute(
                text("""
                    INSERT INTO olympiad_codes 
                    (session_id, class_number, code, student_id, is_assigned, 
                     assigned_at, is_reserve, is_issued, issued_at)
                    VALUES 
                    (:session_id, 9, :code, :student_id, :is_assigned,
                     :assigned_at, false, false, NULL)
                """),
                {
                    "session_id": code_data[1],      # session_id
                    "code": code_data[2],            # code
                    "student_id": code_data[3],      # assigned_student_id
                    "is_assigned": code_data[4],     # is_used
                    "assigned_at": code_data[5]      # assigned_at
                }
            )
            migrated_g9 += 1
        
        print(f"  ‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ –∫–æ–¥–æ–≤ 9 –∫–ª–∞—Å—Å–∞: {migrated_g9}")
        
        await session.commit()
        print(f"\n‚úÖ –í—Å–µ–≥–æ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ –∫–æ–¥–æ–≤: {migrated_g8 + migrated_g9}")


async def migrate_code_requests():
    """
    –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫–æ–¥–æ–≤:
    - –û–±–Ω–æ–≤–ª—è–µ–º —Å–≤—è–∑–∏ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –∫–æ–¥–æ–≤
    """
    print("\n" + "=" * 60)
    print("üìù –ú–ò–ì–†–ê–¶–ò–Ø –ó–ê–ü–†–û–°–û–í –ö–û–î–û–í")
    print("=" * 60)
    
    async with AsyncSessionLocal() as session:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã
        result = await session.execute(text("SELECT * FROM code_requests"))
        requests = result.fetchall()
        
        print(f"\n–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {len(requests)}")
        
        updated = 0
        
        for request in requests:
            request_id = request[0]
            student_id = request[1]
            session_id = request[2]
            grade = request[3]
            old_code = request[4]
            
            # –ù–∞—Ö–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ –≤ –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü–µ
            result = await session.execute(
                text("""
                    SELECT id FROM olympiad_codes
                    WHERE session_id = :sid 
                    AND student_id = :stud_id
                    AND class_number = :grade
                    AND code = :code
                    LIMIT 1
                """),
                {
                    "sid": session_id,
                    "stud_id": student_id,
                    "grade": grade,
                    "code": old_code
                }
            )
            code_id = result.scalar()
            
            if code_id:
                # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
                await session.execute(
                    text("""
                        UPDATE code_requests
                        SET code_id = :code_id
                        WHERE id = :req_id
                    """),
                    {"code_id": code_id, "req_id": request_id}
                )
                updated += 1
        
        await session.commit()
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {updated}")


async def update_sessions_mode():
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Ä–µ–∂–∏–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Å—Å–∏–π
    –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ç–∞–≤–∏–º on_demand
    """
    print("\n" + "=" * 60)
    print("‚öôÔ∏è  –û–ë–ù–û–í–õ–ï–ù–ò–ï –†–ï–ñ–ò–ú–ê –°–ï–°–°–ò–ô")
    print("=" * 60)
    
    async with AsyncSessionLocal() as session:
        result = await session.execute(
            text("""
                UPDATE olympiad_sessions
                SET distribution_mode = 'on_demand'
                WHERE distribution_mode IS NULL
                RETURNING id, subject
            """)
        )
        updated = result.fetchall()
        
        await session.commit()
        
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å–µ—Å—Å–∏–π: {len(updated)}")
        for sess in updated:
            print(f"  - {sess[1]} (ID: {sess[0]})")


async def cleanup_old_tables():
    """
    –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —É–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
    """
    print("\n" + "=" * 60)
    print("üóëÔ∏è  –û–ß–ò–°–¢–ö–ê –°–¢–ê–†–´–• –¢–ê–ë–õ–ò–¶")
    print("=" * 60)
    
    confirm = input("\n‚ö†Ô∏è  –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã? (yes/no): ")
    
    if confirm.lower() not in ['yes', 'y']:
        print("‚ùå –û—á–∏—Å—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
        return
    
    async with AsyncSessionLocal() as session:
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã
        await session.execute(text("DROP TABLE IF EXISTS grade8_codes CASCADE"))
        await session.execute(text("DROP TABLE IF EXISTS grade9_codes CASCADE"))
        
        await session.commit()
        
        print("‚úÖ –°—Ç–∞—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã —É–¥–∞–ª–µ–Ω—ã")


async def main():
    print("\n" + "=" * 60)
    print("üîÑ –ú–ò–ì–†–ê–¶–ò–Ø –î–ê–ù–ù–´–• OLYMPUS BOT")
    print("=" * 60)
    print("\n–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î –≤ –Ω–æ–≤—É—é")
    print("–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å BACKUP –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!")
    print("")
    
    confirm = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): ")
    
    if confirm.lower() not in ['yes', 'y', '–¥–∞', '–¥']:
        print("\n‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
        return
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    print("\nüîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î...")
    await init_db()
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
    await migrate_students()
    await migrate_codes()
    await migrate_code_requests()
    await update_sessions_mode()
    
    # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã
    await cleanup_old_tables()
    
    print("\n" + "=" * 60)
    print("‚úÖ –ú–ò–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
    print("=" * 60)
    print("\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö")
    print("2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏")
    print("3. –ï—Å–ª–∏ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –±—ç–∫–∞–ø")
    print("")


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n\n‚ùå –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()