"""
–ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö CSV —Ñ–∞–π–ª–æ–≤ –∫–æ–¥–æ–≤ —Å –ø—Ä–∏–≤—è–∑–∫–æ–π –∫ –∫–ª–∞—Å—Å–∞–º
–§–∞–π–ª—ã –¥–æ–ª–∂–Ω—ã –Ω–∞–∑—ã–≤–∞—Ç—å—Å—è: sch771584_4.csv, sch771584_5.csv, ..., sch771584_11.csv
"""
import asyncio
import sys
import re
from pathlib import Path
from datetime import datetime

sys.path.insert(0, str(Path(__file__).parent.parent))

from parser.csv_parser import parse_codes_csv
from database.database import AsyncSessionLocal
from database.models import OlympiadSession, Grade8Code, Grade9Code, Student
from sqlalchemy import select


async def load_csv_for_class(csv_file: str, class_number: int):
    """–ó–∞–≥—Ä—É–∑–∏—Ç—å CSV —Ñ–∞–π–ª –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞"""

    print(f"\nüìö –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–¥–æ–≤ –¥–ª—è {class_number} –∫–ª–∞—Å—Å–∞ –∏–∑ {csv_file}")
    print("=" * 70)

    # –ü–∞—Ä—Å–∏–º CSV
    results = parse_codes_csv(csv_file, encoding='windows-1251')

    if not results:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Ñ–∞–π–ª {csv_file}")
        return 0

    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: {len(results)}")

    session_count = 0

    async with AsyncSessionLocal() as session:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —É—á–µ–Ω–∏–∫–æ–≤ —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞
        result = await session.execute(
            select(Student).where(Student.class_number == class_number)
        )
        students = result.scalars().all()

        print(f"üë• –£—á–µ–Ω–∏–∫–æ–≤ {class_number} –∫–ª–∞—Å—Å–∞: {len(students)}")

        for subject_data in results:
            subject = subject_data['subject']
            date = subject_data.get('date') or datetime.now()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –µ—Å–ª–∏ None
            codes = subject_data['codes']

            print(f"\n  üìñ {subject}")
            print(f"     –î–∞—Ç–∞: {date}")
            print(f"     –ö–æ–¥–æ–≤: {len(codes)}")

            # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –æ–ª–∏–º–ø–∏–∞–¥—ã –¥–ª—è —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞
            olympiad = OlympiadSession(
                subject=subject,
                class_number=class_number,
                date=date,
                is_active=False,
                uploaded_file_name=Path(csv_file).name
            )
            session.add(olympiad)
            await session.flush()

            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–¥—ã –∏ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ —É—á–µ–Ω–∏–∫–∞–º
            # –î–ª—è 8 –∫–ª–∞—Å—Å–∞ - –∏–º–µ–Ω–Ω—ã–µ –∫–æ–¥—ã
            # –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö - —Ç–∞–∫–∂–µ –∏–º–µ–Ω–Ω—ã–µ –∫–æ–¥—ã (–Ω–æ –ë–ï–ó –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤—ã–±–æ—Ä–∞ 9 –∫–ª–∞—Å—Å–∞)
            codes_added = 0

            for i, code_str in enumerate(codes):
                # –¶–∏–∫–ª–∏—á–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–¥—ã –º–µ–∂–¥—É —É—á–µ–Ω–∏–∫–∞–º–∏ –∫–ª–∞—Å—Å–∞
                student = students[i % len(students)] if students else None

                code = Grade8Code(
                    session_id=olympiad.id,
                    code=code_str,
                    is_issued=False,
                    student_id=student.id if student else None
                )
                session.add(code)
                codes_added += 1

            await session.flush()
            print(f"     ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∫–æ–¥–æ–≤: {codes_added}")
            session_count += 1

        await session.commit()

    return session_count


async def main():
    """–ó–∞–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ CSV —Ñ–∞–π–ª—ã"""

    # –ò—â–µ–º CSV —Ñ–∞–π–ª—ã –≤–∏–¥–∞ sch771584_X.csv –≥–¥–µ X - –Ω–æ–º–µ—Ä –∫–ª–∞—Å—Å–∞
    csv_files = list(Path('.').glob('sch771584_*.csv'))

    if not csv_files:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ CSV —Ñ–∞–π–ª–æ–≤ –≤–∏–¥–∞ sch771584_X.csv")
        return

    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ CSV —Ñ–∞–π–ª–æ–≤: {len(csv_files)}")

    total_sessions = 0

    for csv_file in sorted(csv_files):
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä –∫–ª–∞—Å—Å–∞ –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        match = re.search(r'sch771584_(\d+)\.csv', csv_file.name)
        if not match:
            print(f"‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫ —Ñ–∞–π–ª–∞ {csv_file.name} - –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")
            continue

        class_number = int(match.group(1))

        if not (4 <= class_number <= 11):
            print(f"‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫ —Ñ–∞–π–ª–∞ {csv_file.name} - –Ω–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∫–ª–∞—Å—Å–∞ ({class_number})")
            continue

        sessions = await load_csv_for_class(str(csv_file), class_number)
        total_sessions += sessions

    print(f"\n{'=' * 70}")
    print(f"‚úÖ –í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —Å–µ—Å—Å–∏–π: {total_sessions}")


if __name__ == "__main__":
    asyncio.run(main())
