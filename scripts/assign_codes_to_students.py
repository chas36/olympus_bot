"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–¥–æ–≤ 8 –∫–ª–∞—Å—Å–∞ –ø–æ —É—á–µ–Ω–∏–∫–∞–º
"""
import asyncio
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent))

from database.database import AsyncSessionLocal
from database.models import Student, Grade8Code, OlympiadSession
from sqlalchemy import select, and_


async def assign_codes_to_students():
    """–†–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–¥—ã 8 –∫–ª–∞—Å—Å–∞ –ø–æ —É—á–µ–Ω–∏–∫–∞–º –¥–ª—è –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π"""

    async with AsyncSessionLocal() as session:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —É—á–µ–Ω–∏–∫–æ–≤
        result = await session.execute(select(Student).where(Student.class_number.isnot(None)))
        students = result.scalars().all()

        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(students)} —É—á–µ–Ω–∏–∫–æ–≤ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∫–ª–∞—Å—Å–æ–º")

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–µ—Å—Å–∏–∏
        result = await session.execute(select(OlympiadSession))
        sessions = result.scalars().all()

        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(sessions)} —Å–µ—Å—Å–∏–π –æ–ª–∏–º–ø–∏–∞–¥")

        total_assigned = 0

        for olympiad in sessions:
            # –ü–æ–ª—É—á–∞–µ–º –Ω–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –∫–æ–¥—ã 8 –∫–ª–∞—Å—Å–∞ –¥–ª—è —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏
            result = await session.execute(
                select(Grade8Code).where(
                    and_(
                        Grade8Code.session_id == olympiad.id,
                        Grade8Code.student_id.is_(None)
                    )
                )
            )
            codes = result.scalars().all()

            if not codes:
                continue

            print(f"\nüìö {olympiad.subject}")
            print(f"   –ö–æ–¥–æ–≤ –±–µ–∑ –ø—Ä–∏–≤—è–∑–∫–∏: {len(codes)}")

            # –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–¥—ã –ø–æ —É—á–µ–Ω–∏–∫–∞–º
            assigned = 0
            for i, student in enumerate(students):
                if i >= len(codes):
                    break

                codes[i].student_id = student.id
                assigned += 1

            total_assigned += assigned
            print(f"   ‚úÖ –ü—Ä–∏–≤—è–∑–∞–Ω–æ –∫–æ–¥–æ–≤: {assigned}")

        await session.commit()

        print(f"\n{'='*60}")
        print(f"‚úÖ –í—Å–µ–≥–æ –ø—Ä–∏–≤—è–∑–∞–Ω–æ –∫–æ–¥–æ–≤: {total_assigned}")


if __name__ == "__main__":
    asyncio.run(assign_codes_to_students())
