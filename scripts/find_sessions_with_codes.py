"""
–ù–∞–π—Ç–∏ —Å–µ—Å—Å–∏–∏ —Å –∫–æ–¥–∞–º–∏
"""
import asyncio
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent))

from database.database import AsyncSessionLocal
from database.models import Grade8Code, Grade9Code, OlympiadSession
from sqlalchemy import select, func


async def find_sessions_with_codes():
    """–ù–∞–π—Ç–∏ —Å–µ—Å—Å–∏–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –∫–æ–¥—ã"""

    async with AsyncSessionLocal() as session:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–µ—Å—Å–∏–∏
        result = await session.execute(
            select(OlympiadSession).order_by(OlympiadSession.id.desc()).limit(10)
        )
        sessions = result.scalars().all()

        print(f"‚úÖ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–µ—Å—Å–∏–π:\n")

        for olympiad in sessions:
            # –°—á–∏—Ç–∞–µ–º –∫–æ–¥—ã 8 –∫–ª–∞—Å—Å–∞
            result = await session.execute(
                select(func.count(Grade8Code.id)).where(Grade8Code.session_id == olympiad.id)
            )
            grade8_count = result.scalar()

            # –°—á–∏—Ç–∞–µ–º –∫–æ–¥—ã 9 –∫–ª–∞—Å—Å–∞
            result = await session.execute(
                select(func.count(Grade9Code.id)).where(Grade9Code.session_id == olympiad.id)
            )
            grade9_count = result.scalar()

            active_mark = "üü¢ –ê–ö–¢–ò–í–ù–ê" if olympiad.is_active else ""
            codes_mark = "‚úÖ" if (grade8_count > 0 or grade9_count > 0) else "‚ùå"

            print(f"{codes_mark} ID {olympiad.id}: {olympiad.subject} {active_mark}")
            print(f"   –ö–æ–¥–æ–≤ 8 –∫–ª–∞—Å—Å–∞: {grade8_count}, –ö–æ–¥–æ–≤ 9 –∫–ª–∞—Å—Å–∞: {grade9_count}")
            print()


if __name__ == "__main__":
    asyncio.run(find_sessions_with_codes())
